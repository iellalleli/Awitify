@{
    ViewData["Title"] = "Awitify";
    Layout = "~/Views/Shared/HomeLayout.cshtml";
}

<div class="container-fluid d-flex justify-content-center align-items-center" style="background-color:#f4f4f4; height: 100vh; padding: 0;">
    <!-- Content Wrapper for the search bar and suggestions -->
    <div class="content-wrapper text-center">
        <!-- Search Bar -->
        <form class="search-bar d-flex justify-content-center align-items-center" onsubmit="handleSearch(event)">
            <input 
                type="text" 
                name="query" 
                placeholder="Search for karaoke songs..." 
                required 
                class="form-control search-input" 
                oninput="showSuggestions()" 
                onkeydown="handleEnter(event)" 
            />
            <button type="submit" class="btn btn-primary">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16" fill="none">
                    <path d="M14 14L11.1 11.1M12.6667 7.33333C12.6667 10.2789 10.2789 12.6667 7.33333 12.6667C4.38781 12.6667 2 10.2789 2 7.33333C2 4.38781 4.38781 2 7.33333 2C10.2789 2 12.6667 4.38781 12.6667 7.33333Z" stroke="#F5F5F5" stroke-width="1.6" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
            </button>
        </form>

        <!-- Suggestions Container -->
        <div class="suggestions-container mt-5">
            <h2>Matched Search Result</h2>
            <div id="suggestions" class="suggestions-list">
                <!-- Suggested songs will appear here -->
            </div>
        </div>
    </div>
</div>

<style>
    .container-fluid {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        padding: 0;
        background-color: #f4f4f4;
    }

    .content-wrapper {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        text-align: center;
        width: 100%;
    }

    .search-bar {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        max-width: 500px;
        background-color: white;
        border-radius: 40px;
        padding: 0 15px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .search-input {
        flex: 1;
        padding: 10px;
        font-size: 1rem;
        border: none;
        border-radius: 30px;
        box-shadow: none;
    }

    .search-input:focus {
        outline: none;
        box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
    }

    .search-bar button {
        background: none;
        border: none;
        padding: 0;
        margin-left: 10px;
        cursor: pointer;
    }

    .search-bar svg {
        width: 20px;
        height: 20px;
        fill: #4d4d4d;
    }

    .suggestions-container {
        margin-top: 40px;
        width: 100%;
        max-width: 700px;
        padding: 20px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .suggestions-container h2 {
        margin-bottom: 20px;
        font-size: 24px;
        color: #333;
    }

    .suggestions-list {
        display: flex;
        justify-content: center;
        gap: 20px;
        flex-wrap: wrap;
    }

    .suggestion-item {
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 15px;
        background-color: #f1f1f1;
        border-radius: 8px;
        cursor: pointer;
        width: 180px;
        text-align: center;
        box-sizing: border-box;
        transition: background-color 0.3s ease;
    }

    .suggestion-item img {
        width: 100%;
        height: auto;
        border-radius: 8px;
        margin-bottom: 10px;
    }

    .suggestion-item:hover {
        background-color: #ddd;
    }

    .no-results {
        font-size: 18px;
        color: #888;
        text-align: center;
        width: 100%;
        margin-top: 20px;
    }
</style>

<script>
    const songSuggestions = [
        { title: "Bohemian Rhapsody - Queen", url: "song1.mp3", image: "song1.jpg" },
        { title: "Shape of You - Ed Sheeran", url: "song2.mp3", image: "song2.jpg" },
        { title: "Blinding Lights - The Weeknd", url: "song3.mp3", image: "song3.jpg" }
    ]; // Example song suggestions

    function showSuggestions() {
        const suggestionsDiv = document.getElementById('suggestions');
        const searchQuery = document.querySelector('.search-input').value.toLowerCase();
        suggestionsDiv.innerHTML = ''; // Clear previous suggestions

        // Filter suggestions based on search query
        const filteredSuggestions = songSuggestions.filter(song =>
            song.title.toLowerCase().includes(searchQuery)
        );

        // If there are no suggestions matching the query, show a default message
        if (filteredSuggestions.length === 0 && searchQuery !== '') {
            const noResults = document.createElement('div');
            noResults.className = 'no-results';
            noResults.textContent = 'No suggestions found.';
            suggestionsDiv.appendChild(noResults);
        } else {
            // Show the filtered suggestions
            filteredSuggestions.slice(0, 3).forEach(song => {
                const suggestionItem = document.createElement('div');
                suggestionItem.className = 'suggestion-item';

                // Create an image element
                const img = document.createElement('img');
                img.src = song.image;
                img.alt = song.title;

                // Create the title element
                const title = document.createElement('div');
                title.textContent = song.title;

                suggestionItem.appendChild(img);
                suggestionItem.appendChild(title);
                suggestionItem.onclick = () => playSong(song.url); // Play song when clicked

                suggestionsDiv.appendChild(suggestionItem);
            });
        }
    }

    function handleEnter(event) {
        if (event.key === "Enter") {
            const searchQuery = document.querySelector('.search-input').value;
            showSuggestions(); // Display suggestions immediately on Enter
        }
    }

    function handleSearch(event) {
        event.preventDefault(); // Prevent form submission
        const searchQuery = document.querySelector('.search-input').value;
        alert(`You searched for: ${searchQuery}`); // Simulate the search action
        // You can replace this with actual search logic
    }

    // Show suggestions when the page loads
    window.onload = function() {
        showSuggestions();
    };
</script>